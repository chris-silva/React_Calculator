{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","deleteLastDigit","setState","trueValue","state","length","slice","buildNum2","x","displayValue","twoOpinArow","clearEverything","processedStringArray","setNegative","attachPeriod","includes","hasPeriod","attachOperation","operation","String","fromCharCode","concat","tempArray","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","splice","myarray","parseFloat","countDecimals","arrayWithDecimals","value","max","i","isNaN","toString","split","getResult","result","numberOfDecimals","eval","join","toFixed","isFinite","processedValue","numbers","clear","period","finalValue","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","style","textAlign","className","width","height","color","backgroundColor","paddingRight","marginTop","AC","cl","eraseNum","Backspace","removeLastDigit","Division","doOperation","Button","btn","buildNum","Multiplication","Subtract","Addition","Period","pd","putPeriod","Equals","performOperation","React","Component","_this2","sendData","bind","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","onClick","eraseData","_this3","addPeriod","_this4","takeOutLastDigit","_this5","callOperation","_this6","_this7","_this8","_this9","performOp","_this10","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.718c46c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayValue : \"0\",\n      trueValue : \"\",\n      processedValue : '',\n      numbers : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n      processedStringArray : [],\n      clear : \"AC\",\n      period : \".\",\n      finalValue : null,\n      twoOpinArow : false,\n      hasPeriod: false,\n\n      setNegative: true\n    };\n    \n  }\n\n  deleteLastDigit = () => {\n    this.setState({\n      trueValue : (this.state.trueValue.length > 0 ? this.state.trueValue.slice(0, this.state.trueValue.length - 1)  : this.state.trueValue)\n    });\n  }\n\n  buildNum2 = (x) => {\n    this.setState({ \n      trueValue : this.state.trueValue + x,\n      displayValue :  this.state.trueValue,\n      twoOpinArow : false\n      \n    });\n  }\n\n  clearEverything = () => {\n    this.setState({\n      displayValue : '0',\n      trueValue : '',\n      processedStringArray : [],\n      setNegative: true\n    })\n  }\n  attachPeriod = () => {\n     if(!this.state.trueValue.includes('.'))\n     { \n       if ( this.state.trueValue === \"\")\n       {\n          this.setState({\n          trueValue : \"0\" + this.state.trueValue + '.',\n          hasPeriod : true \n          })\n       }\n       else\n       {\n          this.setState({\n          trueValue : this.state.trueValue + '.',\n          hasPeriod : true \n          })\n       } \n     }\n  }\n\n  attachOperation = (operation) => {\n    switch (operation)\n    {\n        case String.fromCharCode(215) : //multiplication\n        operation = '*'\n        break;\n        case String.fromCharCode(247) : //division\n        operation = '/'\n        break;\n        case String.fromCharCode(8722) : //subtraction\n        operation = '-'\n        break;\n        case String.fromCharCode(43) : //addition\n        operation = '+'\n        break;\n    }\n   \n      //starting displayed zero is used as the first number\n       if ( this.state.displayValue === '0')\n        {\n          \n          if (operation !== '-')\n          {\n            this.setState({\n            processedStringArray : this.state.processedStringArray.concat('0', operation)\n           })\n          }\n        }\n        else if ( this.state.displayValue ===  \"Division by zero\" )\n        {\n          return;\n        }\n\n\n\n        if( !this.state.twoOpinArow )\n        {\n          if ( !( this.state.trueValue === \"\") )\n          {\n            //no leading zeroes\n            let myarray = [ \"\" + parseFloat(this.state.trueValue), operation]\n\n            this.setState({\n            trueValue : '',\n            displayValue : '0',\n            processedStringArray : this.state.processedStringArray.concat(myarray),\n            twoOpinArow : true\n            })\n          }\n          else if ( this.state.trueValue === \"\" && operation === '-' )\n          {\n            this.setState({\n            trueValue : '-' + this.state.trueValue,\n            twoOpinArow : true\n            })\n          }\n        }\n        else\n        {\n          //second operation inputted\n          //makes sure the last operation is performed if two operations in a row are inputed\n          if (operation !== '-')\n          {\n            let tempArray = [...this.state.processedStringArray];\n            tempArray.splice( tempArray.length - 1, 1);\n            tempArray = [...tempArray, operation];\n\n            this.setState({\n            processedStringArray : tempArray,\n            trueValue : \"\",\n            displayValue : \"0\"\n            });\n          }\n          //number, operation, then negative sign\n          else\n          {\n            if (this.state.setNegative)\n            this.setState({ \n              trueValue :  '-' + this.state.trueValue,\n              displayValue :  '-',\n              setNegative : false\n            });\n          }\n          \n        }\n      }\n  countDecimals = (arrayWithDecimals) => {\n    let value = null;\n    let max = 0;\n\t\n    for (let i = 0; i < arrayWithDecimals.length; i++)\n    {\t\t\t\n\t\t  value = arrayWithDecimals[i];\n\t\t  if ( !isNaN(value) )\n\t\t  {\n\t\t\t  if ((value % 1) !== 0)\n\t\t\t  {\t\n\n\t\t\t  \tvalue = value.toString().split(\".\")[1].length;\n\t\t\t  \t\n\t\t\t\t  if ( value >= max ) { max = value; }\n\t\t\t  }\n\t\t  }\n    }\n    return max;\n  }\n\n  getResult = () => {\n    let result = null;\n    let numberOfDecimals;\n    \n    //if user types number, operation, negative sign, and then the equal button\n    if ( this.state.trueValue === \"-\" )\n    {\n      return;\n    }\n    else if ( this.state.displayValue === \"Division by zero\" )\n    {\n      result = \"Division by zero\";\n    }\n    //input: number, operation, no input\n    else if ( this.state.trueValue === \"\" )\n    {\n      if (this.state.hasPeriod)\n      {\n        result = eval(this.state.processedStringArray.concat(\"0\").join(\" \") );\n        \n        //last number is decimal\n        numberOfDecimals = this.countDecimals( [this.state.processedStringArray, this.state.trueValue] );\n\n        result = result.toFixed(numberOfDecimals);\n        result = \"\" + result;\n      }\n      else\n      {\n        result = eval(this.state.processedStringArray.concat(\"0\").join(\" \") );\n        result = \"\" + result;\n      } \n    }\n    else\n    {\n      if (this.state.hasPeriod)\n      {\n        result = eval(this.state.processedStringArray.concat(this.state.trueValue).join(\" \") );\n\n        //last number is decimal\n        numberOfDecimals = this.countDecimals( [this.state.processedStringArray, this.state.trueValue] );\n\n        result = result.toFixed(numberOfDecimals);\n        result = \"\" + result;\n      }\n      else\n      {\n        result = eval(this.state.processedStringArray.concat(\"\" +  parseFloat(this.state.trueValue)  ).join(\" \") );\n        result = \"\" + result;\n      }\n    }\n\n    //result produced by division by zero\n    if ( !isFinite(result) )\n    {\n      this.setState({\n        displayValue : \"Division by zero\",\n        trueValue : \"\",\n        processedStringArray : [],\n        twoOpinArow : true,\n        hasPeriod : false\n      })\n    }\n    else\n    {\n        this.setState ({\n        displayValue : result,\n        trueValue : \"\" + result,\n        processedStringArray : [],\n        hasPeriod : false,\n        setNegative : true\n      })\n   }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h1 style={{textAlign: 'center'}}>React Calculator</h1>\n      <div className=\"flexContainer\" style={{}}>\n\n      <div style={{width: '160px', height: '40px', textAlign: 'right', color: 'white', backgroundColor: 'black', paddingRight: '5%', marginTop: '5%'}}>\n      <p> {this.state.trueValue === '' ? this.state.displayValue : this.state.trueValue} </p>\n      <p>{}</p>\n      </div>\n      \n      <AC cl={this.state.clear} eraseNum={this.clearEverything} />\n      <Backspace removeLastDigit={this.deleteLastDigit}/>\n      <Division doOperation={this.attachOperation} />\n      \n      < Button btn={this.state.numbers[7]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[8]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[9]} buildNum={this.buildNum2} />\n      <Multiplication doOperation={this.attachOperation} />\n        \n     \n      < Button btn={this.state.numbers[4]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[5]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[6]} buildNum={this.buildNum2} />\n      <Subtract doOperation={this.attachOperation} />\n     \n      < Button btn={this.state.numbers[1]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[2]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[3]} buildNum={this.buildNum2} />\n      <Addition doOperation={this.attachOperation} />\n      \n      < Button btn={this.state.numbers[0]} buildNum={this.buildNum2} />\n      < Period pd={this.state.period} putPeriod={this.attachPeriod} />\n      <Equals performOperation={this.getResult} />\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n    this.sendData = this.sendData.bind(this);\n  }\n\n\n  sendData() {\n    this.props.buildNum(this.props.btn);\n  }\n\n  render() { \n    //button is not zero\n    if ( this.props.btn !== 0 )\n    {\n      return (\n      <div><button \n      className=\"btn btn-primary myButton\"\n      onClick={this.sendData}\n      >\n      {this.props.btn}\n      </button></div> );\n    }\n    else\n    {\n      return (\n        <div><button \n        className=\"btn btn-primary myButton bigger-button\"\n        onClick={this.sendData}\n        >\n        {this.props.btn}\n        </button></div> );\n    }\n    \n  }\n}\n\nclass AC extends Component {\n  \n  eraseData = () => { this.props.eraseNum(); }\n  render() { \n    return ( <div className=\"bigger-button myButton\"><button \n      className=\"btn btn-warning btn-block\" onClick={this.eraseData}>\n      {this.props.cl}\n      </button></div>  );\n  }\n}\n \nclass Period extends Component {\n  addPeriod = () => {this.props.putPeriod();}\n  render() { \n    return ( \n    <div>\n      <button style={{width: '38px'}} className=\"btn btn-primary myButton\" onClick={this.addPeriod}>\n      {this.props.pd}\n      </button></div>  );\n  }\n}\n\nclass Backspace extends Component {\n  takeOutLastDigit = () => {this.props.removeLastDigit();}\n  render() { \n    return ( <div><button\n    className=\"btn btn-warning myButton\"\n    onClick={this.takeOutLastDigit}\n    >\n    {String.fromCharCode(8592)}\n    </button></div> );\n  }\n}\n\nclass Addition extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(43));}\n  render() { \n    return ( \n      <div><button \n      className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(43)}</button></div>\n     );\n  }\n}\n\nclass Subtract extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(8722));}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(8722)}</button></div>\n     );\n  }\n}\n\nclass Multiplication extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(215));}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(215)}</button></div>\n     );\n  }\n}\n\nclass Division extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(247));}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(247)}</button></div>\n     );\n  }\n}\n \nclass Equals extends Component {\n  performOp = () => {this.props.performOperation();}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.performOp}\n      >\n    {String.fromCharCode(61)}</button></div>\n     );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}