{"version":3,"sources":["App.js","logo.svg","serviceWorker.js","index.js"],"names":["App","props","_this","Object","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","deleteLastDigit","setState","trueValue","state","length","slice","buildNum2","x","displayValue","twoOpinArow","clearEverything","processedStringArray","attachPeriod","includes","attachOperation","operation","String","fromCharCode","console","log","concat","tempArray","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","splice","myarray","countDecimals","arrayWithDecimals","value","max","i","isNaN","toString","split","getResult","result","numberOfDecimals","eval","join","toFixed","isFinite","processedValue","numbers","clear","period","finalValue","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","style","textAlign","className","width","height","color","backgroundColor","paddingRight","marginTop","map","AC","cl","eraseNum","Backspace","removeLastDigit","Division","doOperation","Button","btn","buildNum","Multiplication","Subtract","Addition","Period","pd","putPeriod","Equals","performOperation","React","Component","_this2","sendData","bind","C_Users_Chris_Desktop_React_Apps_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","onClick","eraseData","_this3","addPeriod","_this4","takeOutLastDigit","_this5","callOperation","_this6","_this7","_this8","_this9","performOp","_this10","module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e834429c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import Button from './components/Button'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayValue : \"0\",\n      trueValue : \"\",\n      processedValue : '',\n      numbers : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n      processedStringArray : [],\n      //list: [1, 2, 3],\n      //operators : [ \"+\", \"-\", '*', '/', '='],\n      clear : \"AC\",\n      //backspace : \"&larr;\",\n      period : \".\",\n      finalValue : null,\n      twoOpinArow : false\n    };\n    //this.buildNum2 = this.buildNum2.bind(this);\n  }\n\n  //displayValueFunc = () => { return this.state.displayValue === '' ? '0' : this.state.displayValue;}\n/*\n  buildNum2(x) { this.setState({ displayValue : this.state.displayValue + x }); \n  console.log(\"hello\")\n  }\n*/\n\n  deleteLastDigit = () => {\n    this.setState({\n      trueValue : (this.state.trueValue.length > 0 ? this.state.trueValue.slice(0, this.state.trueValue.length - 1)  : this.state.trueValue)\n    });\n  }\n\n  buildNum2 = (x) => {\n    this.setState({ \n      trueValue : this.state.trueValue + x,\n      displayValue :  this.state.trueValue,\n\n      twoOpinArow : false\n      \n    });\n    //https://reactjs.org/docs/faq-state.html\n    //console.log('displayValue:' + this.state.displayValue);\n  }\n\n  clearEverything = () => {\n    this.setState({\n      displayValue : '0',\n      trueValue : '',\n      processedStringArray : []\n    })\n  }\n  attachPeriod = () => {\n     if(!this.state.trueValue.includes('.'))\n     { \n       this.setState({trueValue : this.state.trueValue + '.' }) \n     }\n  }\n\n  attachOperation = (operation) => {\n\n    //console.log(this.state.trueValue);\n    switch (operation)\n    {\n        case String.fromCharCode(215) : //multiplication\n        operation = '*'\n        break;\n        case String.fromCharCode(247) : //division\n        operation = '/'\n        break;\n        case String.fromCharCode(8722) : //subtraction\n        operation = '-'\n        break;\n        case String.fromCharCode(43) : //addition\n        operation = '+'\n        break;\n    }\n    ///////////////////////////////\n    \n       if ( this.state.displayValue == '0')\n        {\n          if (operation != '-')\n          {\n            console.log(\"hello5\");\n           this.setState({\n            processedStringArray : this.state.processedStringArray.concat('0', operation)\n           })\n           //return false;\n          }\n        }\n        else if ( this.state.displayValue ===  \"Division by zero\" ) { }\n    \n        if( !this.state.twoOpinArow )\n        {\n          if ( !( this.state.trueValue === \"\") )\n          {\n          let myarray = [this.state.trueValue, operation]  \n          this.setState({\n            \n            trueValue : '',\n            displayValue : '0',\n            processedStringArray : this.state.processedStringArray.concat(myarray),\n\n            twoOpinArow : true\n            })\n          }\n          else if ( this.state.trueValue == \"\" && operation == '-' )\n          {\n            console.log(\"this.state.trueValue \" + this.state.trueValue);\n          let myarray = [operation];\n          this.setState({\n          \n          //trueValue : '',\n          trueValue : '-' + this.state.trueValue,\n          twoOpinArow : true\n          //displayValue : '-',\n          //processedStringArray : this.state.processedStringArray.concat(myarray)\n            })\n          }\n        }\n        else\n        {\n          console.log(\"up\");\n          if ( this.state.trueValue != '-' )\n          {\n          //let tempArray = [ this.state.processedStringArray[0], operation ];\n          let tempArray = [...this.state.processedStringArray];\n          //tempArray = tempArray.pop();\n          console.log( tempArray[0] + tempArray[1]);\n          tempArray.splice( tempArray.length - 1, 1);\n          tempArray = [...tempArray, operation];\n          //console.log( tempArray[0] + tempArray[1]);\n          this.setState({\n            //processedStringArray : this.state.processedStringArray.splice(this.state.processedStringArray.length-1, 1)\n            processedStringArray : tempArray\n          });\n          }\n        }\n        /*\n        \n        */\n    ///////////////////////////////\n\n    /* //was working\n    let myarray = [this.state.trueValue, operation]  \n    this.setState({\n      //processedValue : this.state.trueValue,\n      trueValue : '',\n      displayValue : '0',\n      processedStringArray : this.state.processedStringArray.concat(myarray)\n    })\n    */\n\n    //console.log(this.state.processedStringArray[0] + \" \" + this.state.processedStringArray[1]);\n  }\n\n  countDecimals = (arrayWithDecimals) => {\n    let value = null;\n    let max = 0;\n\t\n    for (let i = 0; i < arrayWithDecimals.length; i++)\n    {\t\t\t\n\t\t  value = arrayWithDecimals[i];\n\t\t  if ( !isNaN(value) )\n\t\t  {\n\t\t\t  if ((value % 1) != 0)\n\t\t\t  {\t\n\t\t\t  \tvalue = value.toString().split(\".\")[1].length;\n\t\t\t  \tconsole.log(\"decimal: \" + value);\n\t\t\t\t  if ( value >= max ) { max = value; }\n\t\t\t  }\n\t\t  }\n    }\n    return max;\n  }\n\n  getResult = () => {\n    let result = null;\n    let numberOfDecimals = this.countDecimals(this.state.processedStringArray);\n/*\n    this.setState({\n      processedStringArray : this.state.processedStringArray.concat(this.state.trueValue)\n    })\n*/\n    //console.log(this.state.processedStringArray[0] + \" \" + this.state.processedStringArray[1] + \" \" + this.state.processedStringArray[2] );\n    //console.log(\"this.state.trueValue : \" + this.state.trueValue);\n\n    \n    if ( this.state.displayValue === \"Division by zero\" )\n    {\n      result = \"Division by zero\";\n    }\n\n    //input: number, operation, no input\n    else if ( this.state.trueValue === \"\" )\n    {\n      result = eval(this.state.processedStringArray.concat(\"0\").join(\" \") );\n      result = result.toFixed(numberOfDecimals);\n      result = \"\" + result; \n    }\n    else\n    { \n      result = eval(this.state.processedStringArray.concat(this.state.trueValue).join(\" \") );\n      result = result.toFixed(numberOfDecimals);\n      result = \"\" + result;\n    }\n    //console.log(this.state.processedStringArray.concat(this.state.trueValue));\n    //console.log(result);\n\n    //result produced by division by zero\n    if ( !isFinite(result) )\n    {\n      this.setState({\n        displayValue : \"Division by zero\",\n        trueValue : \"\",\n        processedStringArray : [],\n        twoOpinArow : true\n      })\n    }\n    else\n    {\n    this.setState ({\n\n        //processedStringArray : this.state.processedStringArray.concat(this.state.displayValue),\n       displayValue : result,\n        //displayValue: eval(this.state.processedStringArray),\n        trueValue : \"\" + result,\n        processedStringArray : []\n      })\n   }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h1 style={{textAlign: 'center'}}>React Calculator</h1>\n      <div className=\"flexContainer\" style={{}}>\n\n      <div style={{width: '160px', height: '40px', textAlign: 'right', color: 'white', backgroundColor: 'black', paddingRight: '5%', marginTop: '5%'}}>\n      <p> {this.state.trueValue === '' ? this.state.displayValue : this.state.trueValue} </p>\n      <p>{\n        \n        this.state.processedStringArray.map(x => x)\n       \n        }</p>\n      </div>\n      \n      <AC cl={this.state.clear} eraseNum={this.clearEverything} />\n      {/*\n      <AC cl={this.state.clear} eraseNum={this.clearEverything} />\n      */}\n      <Backspace removeLastDigit={this.deleteLastDigit}/>\n      <Division doOperation={this.attachOperation} />\n      \n      < Button btn={this.state.numbers[7]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[8]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[9]} buildNum={this.buildNum2} />\n      <Multiplication doOperation={this.attachOperation} />\n        {/* < Operator op={this.state.operators[0]} /> */}\n     \n      < Button btn={this.state.numbers[4]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[5]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[6]} buildNum={this.buildNum2} />\n      <Subtract doOperation={this.attachOperation} />\n     \n      < Button btn={this.state.numbers[1]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[2]} buildNum={this.buildNum2} />\n      < Button btn={this.state.numbers[3]} buildNum={this.buildNum2} />\n      <Addition doOperation={this.attachOperation} />\n      {/*  < Operator op={this.state.operators[2]} /> */}\n      \n      < Button btn={this.state.numbers[0]} buildNum={this.buildNum2} />\n{/*\n      < Button btn={this.state.numbers[0]} buildNum={this.buildNum2} />\n*/}\n      < Period pd={this.state.period} putPeriod={this.attachPeriod} />\n      <Equals performOperation={this.getResult} />\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n    this.sendData = this.sendData.bind(this);\n  }\n\n\n  sendData() {\n    this.props.buildNum(this.props.btn);\n  }\n\n  render() { \n    \n      return (\n      <div><button \n      className=\"btn btn-primary myButton\"\n      onClick={this.sendData}\n      >\n      {this.props.btn}\n      </button></div> );\n    \n  }\n}\n\n/*\nclass Operator extends Component {\n  state = {  }\n  render() { \n    return ( <div><button className=\"btn btn-secondary\" styles={{color: \"#000000\"}}>{this.props.op}</button></div> );\n  }\n}\n*/\n\nclass AC extends Component {\n  \n  eraseData = () => { this.props.eraseNum(); }\n  render() { \n    return ( <div className=\"bigger-button myButton\"><button \n      className=\"btn btn-warning btn-block\" onClick={this.eraseData}>\n      {this.props.cl}\n      </button></div>  );\n  }\n}\n \nclass Period extends Component {\n  addPeriod = () => {this.props.putPeriod();}\n  render() { \n    return ( \n    <div>\n      <button className=\"btn btn-primary myButton\" onClick={this.addPeriod}>\n      {this.props.pd}\n      </button></div>  );\n  }\n}\n\nclass Backspace extends Component {\n  takeOutLastDigit = () => {this.props.removeLastDigit();}\n  render() { \n    return ( <div><button\n    className=\"btn btn-warning myButton\"\n    onClick={this.takeOutLastDigit}\n    >\n    {String.fromCharCode(8592)}\n    </button></div> );\n  }\n}\n\nclass Addition extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(43));}\n  render() { \n    return ( \n      <div><button \n      className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(43)}</button></div>\n     );\n  }\n}\n\nclass Subtract extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(8722));}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(8722)}</button></div>\n     );\n  }\n}\n\nclass Multiplication extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(215));}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(215)}</button></div>\n     );\n  }\n}\n\nclass Division extends Component {\n  callOperation = () => {this.props.doOperation(String.fromCharCode(247));}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.callOperation}\n      >\n    {String.fromCharCode(247)}</button></div>\n     );\n  }\n}\n \nclass Equals extends Component {\n  performOp = () => {this.props.performOperation();}\n  render() { \n    return ( \n      <div><button className=\"btn btn-warning myButton\"\n      onClick={this.performOp}\n      >\n    {String.fromCharCode(61)}</button></div>\n     );\n  }\n}\n \n\nexport default App;\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}